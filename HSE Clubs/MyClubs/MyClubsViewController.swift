//
//  SearchViewController.swift
//  HSE Clubs
//
//  Created by Ярослав Ульяненков on 13.03.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit


protocol MyClubsDisplayLogic: AnyObject
{
    func displayClubs(clubs: [MyClub])
}

class MyClubsViewController: UICollectionViewController, UICollectionViewDelegateFlowLayout, MyClubsDisplayLogic, UISearchControllerDelegate
{
    var interactor: MyClubsBusinessLogic?
    var router: (NSObjectProtocol & MyClubsRoutingLogic & MyClubsDataPassing)?
    var clubs: [MyClub] = []
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    init() {
        let config = UICollectionLayoutListConfiguration(appearance: .insetGrouped)
        let layoutFlow = UICollectionViewCompositionalLayout.list(using: config)
        super.init(collectionViewLayout: layoutFlow)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = MyClubsInteractor()
        let presenter = MyClubsPresenter()
        let router = MyClubsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        view.backgroundColor = .white
        setupCollectionView()
        updateInformation()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        self.tabBarController?.title = "Мои клубы"
        self.tabBarController?.navigationItem.rightBarButtonItem = UIBarButtonItem(barButtonSystemItem: .add, target: self, action: #selector(addButtonPressed))
        updateInformation()
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        self.tabBarController?.navigationItem.searchController = nil
        self.tabBarController?.navigationItem.rightBarButtonItem = nil
    }
    
    @objc func addButtonPressed(sender: UIButton) {
        let storyBoard = UIStoryboard(name: "ClubCreation", bundle: nil)
        let clubCreationController = storyBoard.instantiateViewController(withIdentifier: "ClubCreation")
        self.navigationController?.isNavigationBarHidden = false
        self.navigationController?.pushViewController(clubCreationController, animated: true)
    }
    
    
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize
    {
        return CGSize(width: Double(view.frame.width), height: ClubCell.cellSize + 20.0)
    }
    
    func setupCollectionView() {
        collectionView.dataSource = self
        collectionView.delegate = self
        collectionView.showsVerticalScrollIndicator = true
        view.addSubview(collectionView)
        collectionView.register(MyClubCell.self, forCellWithReuseIdentifier: MyClubCell.cellId)
        collectionView.backgroundColor = .white
    }
    
    func updateInformation()
    {
        interactor?.loadClubs()
    }
    
    func displayClubs(clubs: [MyClub])
    {
        self.clubs = clubs
        collectionView.reloadData()
    }
    
    override func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: MyClubCell.cellId, for: indexPath) as! MyClubCell
        cell.layer.masksToBounds = true
        let club = self.clubs[indexPath.row]
        cell.customize(name: club.name, description: club.description, avatar: club.avatar)
        cell.setupEvents(events: club.events)
        
        return cell
    }
    
    override func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return self.clubs.count
    }
    
    override func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        let clubController = ClubViewController()
        clubController.setupId(id: clubs[indexPath.row].id)
        self.navigationController?.pushViewController(clubController, animated: true)
    }
}
