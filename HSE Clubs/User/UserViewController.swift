//
//  UserViewController.swift
//  HSE Clubs
//
//  Created by Ярослав Ульяненков on 08.03.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SnapKit

protocol UserDisplayLogic: AnyObject
{
    func displayUser(user: User.Response)
}

class UserViewController: UIViewController, UserDisplayLogic
{
    var interactor: UserBusinessLogic?
    var router: (NSObjectProtocol & UserRoutingLogic & UserDataPassing)?
    let contactsTitle: UILabel = {
        let label = UILabel()
        label.text = "Контакты"
        label.font = UIFont.systemFont(ofSize: 30, weight: .semibold)
        label.textColor = UIColor(red: 0, green: 47/225.0, blue: 141/225.0, alpha: 100)
        return label
    }()
    
    var userData: UserView?
    var contacts: ContactsView?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
        loadUser()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = UserInteractor()
        let presenter = UserPresenter()
        let router = UserRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        view.backgroundColor = .white
        
        
        userData = UserView(frame: CGRect(x: 0, y: 0, width: view.frame.width, height: 120), name: "Имя", avatar: UIImage(named: "kianu"), post: "BSE204", department: "FCS SE")
        guard let userData = userData else {
            return
        }
        
        view.addSubview(userData)
        userData.snp.makeConstraints { make in
            make.top.equalTo(view.safeAreaLayoutGuide).offset(20)
            make.left.equalTo(view).offset(20)
            make.width.equalTo(view).offset(-40)
            make.height.equalTo(120)
        }
        
        view.addSubview(contactsTitle)
        contactsTitle.snp.makeConstraints { make in
            make.top.equalTo(userData.snp.bottom).offset(20)
            make.left.equalTo(view).offset(20)
        }
        
        contacts = ContactsView(frame: CGRect(x: 0, y: 0, width: view.frame.width, height: 120), tg: "нет", vk: "нет", email: "нет")
        
        guard let contacts = contacts else {
            return
        }
        
        contacts.translatesAutoresizingMaskIntoConstraints = false
        contacts.isUserInteractionEnabled = true
        
        view.addSubview(contacts)
        contacts.snp.makeConstraints { make in
            make.left.equalTo(view).offset(20)
            make.top.equalTo(contactsTitle.snp.bottom).offset(20)
            make.width.equalTo(view).offset(-40)
            make.height.equalTo(125)
        }
        
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        loadUser()
        
        self.tabBarController?.title = "Профиль"
        let settingsButton = UIBarButtonItem(title: NSString(string: "\u{2699}\u{0000FE0E}") as String, style: .plain, target: self, action: #selector(self.settingsButton))
        
        let attributes = [
            NSAttributedString.Key.font : UIFont.systemFont(ofSize: 40)
        ]
        
        settingsButton.setTitleTextAttributes(attributes, for: .normal)
        settingsButton.setTitleTextAttributes(attributes, for: .selected)
        
        self.tabBarController?.navigationItem.rightBarButtonItem = settingsButton
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        
        self.tabBarController?.navigationItem.rightBarButtonItem = nil

    }
    
    // MARK: Do something
    
    
    func loadUser()
    {
        let request = User.Request()
        interactor?.getUserData(request: request)
    }
    
    func displayUser(user: User.Response)
    {
        DispatchQueue.main.async {
            self.userData?.setName(name: user.name ?? "")
            self.contacts?.setEmail(email: user.email ?? "нет")
            self.contacts?.setVK(vk: user.vk ?? "нет")
            self.contacts?.setTelegram(telegram: user.telegram ?? "нет")

        }
    }
    
    @objc func settingsButton(sender: UIButton) {
        let storyBoard = UIStoryboard(name: "Settings", bundle: nil)
        let settingsViewController = storyBoard.instantiateViewController(withIdentifier: "Settings")
        self.navigationController?.isNavigationBarHidden = false
        self.navigationController?.pushViewController(settingsViewController, animated: true)
    }
}
